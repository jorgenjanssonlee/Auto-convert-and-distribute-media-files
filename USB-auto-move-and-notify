#!/bin/bash
PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin
## Available variables: 
# AVAIL      : available space
# USED       : used space
# SIZE       : partition size
# SERIAL     : disk serial number
# ACTION     : if mounting, ADD; if unmounting, REMOVE
# MOUNTPOINT : where the partition is mounted
# FSTYPE     : partition filesystem
# LABEL      : partition label
# DEVICE     : partition device, e.g /dev/sda1
# OWNER      : "udev" if executed by UDEV, otherwise "user"
# PROG_NAME  : program name of this script
# LOGFILE    : log file for this script

USBdestination="fromServer"
serverTemp="/mnt/user/Media/Temporary Items"
serverSource="/mnt/user/Handbrake-hotfolder/watch/"

case $ACTION in
  'ADD' )
    sleep 2

    if [ -d $MOUNTPOINT ]
    then
      if [ $OWNER = "udev" ]
      then
        logger Started -t$PROG_NAME
        echo "Started: `date`" > $LOGFILE

        logger Move from server to USB -t$PROG_NAME
        rsync -rv --dry-run --remove-source-files "$serverSource" "$MOUNTPOINT/$USBdestination" 2>&1 >> $LOGFILE

#        logger Move from USB to server -t$PROG_NAME
#        rsync -rv --dry-run --remove-source-files --exclude="$USBdestination" --exclude="*.txt" $MOUNTPOINT/ $serverTemp 2>&1 >> $LOGFILE


        logger Syncing -t$PROG_NAME
        sync

        logger Unmounting PicturesBackup -t$PROG_NAME
        /usr/local/sbin/rc.unassigned umount $DEVICE

       echo "Completed: `date`" >> $LOGFILE
        logger Pictures Backup drive can be removed -t$PROG_NAME

    fi
    else
        logger Pictures Backup Drive Not Mounted -t$PROG_NAME
  fi
  ;;

  'REMOVE' )
    #
    # Beep that the device is unmounted.
    #

    /usr/local/emhttp/webGui/scripts/notify -e "unRAID Server Notice" -s "Server Backup" -d "Pictures Backup completed" -i "normal"
  ;;
esac
